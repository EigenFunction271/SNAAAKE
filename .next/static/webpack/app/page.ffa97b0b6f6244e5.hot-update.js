"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./utils/audio-system.tsx":
/*!********************************!*\
  !*** ./utils/audio-system.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AudioSystem: function() { return /* binding */ AudioSystem; }\n/* harmony export */ });\nclass AudioSystem {\n    static getInstance() {\n        if (!AudioSystem.instance) {\n            AudioSystem.instance = new AudioSystem();\n        }\n        return AudioSystem.instance;\n    }\n    async loadSounds() {\n        try {\n            // In development, use placeholder sounds\n            if (true) {\n                this.sounds = await this.loadPlaceholderSounds();\n                return;\n            }\n            // In production, load real sound files\n            const soundFiles = {\n                collect: \"/assets/audio/collect.mp3\",\n                collision: \"/assets/audio/collision.mp3\",\n                powerup: \"/assets/audio/powerup.mp3\",\n                gameover: \"/assets/audio/gameover.mp3\"\n            };\n            for (const [name, path] of Object.entries(soundFiles)){\n                const response = await fetch(path);\n                const arrayBuffer = await response.arrayBuffer();\n                const audioBuffer = await this.context.decodeAudioData(arrayBuffer);\n                this.sounds.set(name, audioBuffer);\n            }\n            // Load background music\n            const musicResponse = await fetch(\"/assets/audio/background.mp3\");\n            const musicArrayBuffer = await musicResponse.arrayBuffer();\n            this.musicBuffer = await this.context.decodeAudioData(musicArrayBuffer);\n        } catch (error) {\n            console.error(\"Failed to load audio:\", error);\n        }\n    }\n    async loadPlaceholderSounds() {\n        const placeholders = new Map();\n        const sampleRate = this.context.sampleRate;\n        // Create simple beep sounds\n        const createBeep = (frequency, duration)=>{\n            const length = duration * sampleRate;\n            const buffer = this.context.createBuffer(1, length, sampleRate);\n            const data = buffer.getChannelData(0);\n            for(let i = 0; i < length; i++){\n                data[i] = Math.sin(2 * Math.PI * frequency * i / sampleRate) * Math.exp(-3 * i / length);\n            }\n            return buffer;\n        };\n        placeholders.set(\"collect\", createBeep(880, 0.1));\n        placeholders.set(\"collision\", createBeep(220, 0.2));\n        placeholders.set(\"powerup\", createBeep(660, 0.15));\n        placeholders.set(\"gameover\", createBeep(440, 0.3));\n        return placeholders;\n    }\n    playSound(type) {\n        const sound = this.sounds.get(type);\n        if (!sound) return;\n        const source = this.context.createBufferSource();\n        source.buffer = sound;\n        source.connect(this.sfxGain);\n        source.start();\n    }\n    playMusic() {\n        if (this.musicSource || !this.musicBuffer) return;\n        this.musicSource = this.context.createBufferSource();\n        this.musicSource.buffer = this.musicBuffer;\n        this.musicSource.loop = true;\n        this.musicSource.connect(this.musicGain);\n        this.musicSource.start();\n    }\n    stopMusic() {\n        if (this.musicSource) {\n            this.musicSource.stop();\n            this.musicSource = null;\n        }\n    }\n    setVolume(type, level) {\n        if (type === \"music\") {\n            this.musicGain.gain.value = level;\n        } else {\n            this.sfxGain.gain.value = level;\n        }\n    }\n    updateOptions(options) {\n        if (!options.soundEnabled) {\n            this.stopMusic();\n        } else if (!this.musicSource && this.musicBuffer) {\n            this.playMusic();\n        }\n        this.setVolume(\"music\", options.musicVolume);\n        this.setVolume(\"sfx\", options.sfxVolume);\n    }\n    resume() {\n        if (this.context.state === \"suspended\") {\n            this.context.resume();\n        }\n    }\n    constructor(){\n        this.sounds = new Map();\n        this.musicBuffer = null;\n        this.musicSource = null;\n        this.context = new AudioContext();\n        this.musicGain = this.context.createGain();\n        this.sfxGain = this.context.createGain();\n        this.musicGain.connect(this.context.destination);\n        this.sfxGain.connect(this.context.destination);\n        this.loadSounds();\n    }\n}\nAudioSystem.instance = null;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/audio-system.tsx\n"));

/***/ })

});