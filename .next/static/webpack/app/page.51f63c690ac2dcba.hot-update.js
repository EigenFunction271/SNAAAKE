"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./utils/food.tsx":
/*!************************!*\
  !*** ./utils/food.tsx ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Food: function() { return /* binding */ Food; }\n/* harmony export */ });\nclass Food {\n    update() {\n        // Pulsing animation\n        this.pulseAmount += 0.1 * this.pulseDirection;\n        if (this.pulseAmount > 1) this.pulseDirection = -1;\n        if (this.pulseAmount < 0) this.pulseDirection = 1;\n    }\n    draw(ctx) {\n        const pulseScale = 1 + this.pulseAmount * 0.2;\n        ctx.beginPath();\n        ctx.arc(this.position.x, this.position.y, this.radius * pulseScale, 0, Math.PI * 2);\n        // Gradient fill\n        const gradient = ctx.createRadialGradient(this.position.x, this.position.y, 0, this.position.x, this.position.y, this.radius * pulseScale);\n        gradient.addColorStop(0, \"#fff\");\n        gradient.addColorStop(1, this.color);\n        ctx.fillStyle = gradient;\n        ctx.fill();\n        // Glow effect\n        ctx.shadowColor = this.color;\n        ctx.shadowBlur = 10;\n        ctx.fill();\n        ctx.shadowBlur = 0;\n    }\n    constructor(options){\n        this.pulseAmount = 0;\n        this.pulseDirection = 1;\n        this.position = {\n            x: options.x,\n            y: options.y\n        };\n        this.type = options.type;\n        if (this.type === \"special\") {\n            this.radius = 15;\n            this.color = \"#f0f\";\n            this.value = 3;\n        } else {\n            this.radius = 12;\n            this.color = \"#0ff\";\n            this.value = 1;\n        }\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3V0aWxzL2Zvb2QudHN4IiwibWFwcGluZ3MiOiI7Ozs7QUFNTyxNQUFNQTtJQXdCWEMsU0FBZTtRQUNiLG9CQUFvQjtRQUNwQixJQUFJLENBQUNDLFdBQVcsSUFBSSxNQUFNLElBQUksQ0FBQ0MsY0FBYztRQUM3QyxJQUFJLElBQUksQ0FBQ0QsV0FBVyxHQUFHLEdBQUcsSUFBSSxDQUFDQyxjQUFjLEdBQUcsQ0FBQztRQUNqRCxJQUFJLElBQUksQ0FBQ0QsV0FBVyxHQUFHLEdBQUcsSUFBSSxDQUFDQyxjQUFjLEdBQUc7SUFDbEQ7SUFFQUMsS0FBS0MsR0FBNkIsRUFBUTtRQUN4QyxNQUFNQyxhQUFhLElBQUksSUFBSSxDQUFDSixXQUFXLEdBQUc7UUFFMUNHLElBQUlFLFNBQVM7UUFDYkYsSUFBSUcsR0FBRyxDQUNMLElBQUksQ0FBQ0MsUUFBUSxDQUFDQyxDQUFDLEVBQ2YsSUFBSSxDQUFDRCxRQUFRLENBQUNFLENBQUMsRUFDZixJQUFJLENBQUNDLE1BQU0sR0FBR04sWUFDZCxHQUNBTyxLQUFLQyxFQUFFLEdBQUc7UUFHWixnQkFBZ0I7UUFDaEIsTUFBTUMsV0FBV1YsSUFBSVcsb0JBQW9CLENBQ3ZDLElBQUksQ0FBQ1AsUUFBUSxDQUFDQyxDQUFDLEVBQ2YsSUFBSSxDQUFDRCxRQUFRLENBQUNFLENBQUMsRUFDZixHQUNBLElBQUksQ0FBQ0YsUUFBUSxDQUFDQyxDQUFDLEVBQ2YsSUFBSSxDQUFDRCxRQUFRLENBQUNFLENBQUMsRUFDZixJQUFJLENBQUNDLE1BQU0sR0FBR047UUFFaEJTLFNBQVNFLFlBQVksQ0FBQyxHQUFHO1FBQ3pCRixTQUFTRSxZQUFZLENBQUMsR0FBRyxJQUFJLENBQUNDLEtBQUs7UUFFbkNiLElBQUljLFNBQVMsR0FBR0o7UUFDaEJWLElBQUllLElBQUk7UUFFUixjQUFjO1FBQ2RmLElBQUlnQixXQUFXLEdBQUcsSUFBSSxDQUFDSCxLQUFLO1FBQzVCYixJQUFJaUIsVUFBVSxHQUFHO1FBQ2pCakIsSUFBSWUsSUFBSTtRQUNSZixJQUFJaUIsVUFBVSxHQUFHO0lBQ25CO0lBdERBQyxZQUFZQyxPQUFvQixDQUFFO2FBSGxDdEIsY0FBc0I7YUFDdEJDLGlCQUF5QjtRQUd2QixJQUFJLENBQUNNLFFBQVEsR0FBRztZQUFFQyxHQUFHYyxRQUFRZCxDQUFDO1lBQUVDLEdBQUdhLFFBQVFiLENBQUM7UUFBQztRQUM3QyxJQUFJLENBQUNjLElBQUksR0FBR0QsUUFBUUMsSUFBSTtRQUV4QixJQUFJLElBQUksQ0FBQ0EsSUFBSSxLQUFLLFdBQVc7WUFDM0IsSUFBSSxDQUFDYixNQUFNLEdBQUc7WUFDZCxJQUFJLENBQUNNLEtBQUssR0FBRztZQUNiLElBQUksQ0FBQ1EsS0FBSyxHQUFHO1FBQ2YsT0FBTztZQUNMLElBQUksQ0FBQ2QsTUFBTSxHQUFHO1lBQ2QsSUFBSSxDQUFDTSxLQUFLLEdBQUc7WUFDYixJQUFJLENBQUNRLEtBQUssR0FBRztRQUNmO0lBQ0Y7QUEwQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vdXRpbHMvZm9vZC50c3g/MDQyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgRm9vZE9wdGlvbnMge1xyXG4gIHg6IG51bWJlcjtcclxuICB5OiBudW1iZXI7XHJcbiAgdHlwZTogJ3JlZ3VsYXInIHwgJ3NwZWNpYWwnO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRm9vZCB7XHJcbiAgcG9zaXRpb246IHsgeDogbnVtYmVyOyB5OiBudW1iZXIgfTtcclxuICB0eXBlOiAncmVndWxhcicgfCAnc3BlY2lhbCc7XHJcbiAgcmFkaXVzOiBudW1iZXI7XHJcbiAgY29sb3I6IHN0cmluZztcclxuICB2YWx1ZTogbnVtYmVyO1xyXG4gIHB1bHNlQW1vdW50OiBudW1iZXIgPSAwO1xyXG4gIHB1bHNlRGlyZWN0aW9uOiBudW1iZXIgPSAxO1xyXG5cclxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBGb29kT3B0aW9ucykge1xyXG4gICAgdGhpcy5wb3NpdGlvbiA9IHsgeDogb3B0aW9ucy54LCB5OiBvcHRpb25zLnkgfTtcclxuICAgIHRoaXMudHlwZSA9IG9wdGlvbnMudHlwZTtcclxuICAgIFxyXG4gICAgaWYgKHRoaXMudHlwZSA9PT0gJ3NwZWNpYWwnKSB7XHJcbiAgICAgIHRoaXMucmFkaXVzID0gMTU7XHJcbiAgICAgIHRoaXMuY29sb3IgPSAnI2YwZic7XHJcbiAgICAgIHRoaXMudmFsdWUgPSAzO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5yYWRpdXMgPSAxMjtcclxuICAgICAgdGhpcy5jb2xvciA9ICcjMGZmJztcclxuICAgICAgdGhpcy52YWx1ZSA9IDE7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB1cGRhdGUoKTogdm9pZCB7XHJcbiAgICAvLyBQdWxzaW5nIGFuaW1hdGlvblxyXG4gICAgdGhpcy5wdWxzZUFtb3VudCArPSAwLjEgKiB0aGlzLnB1bHNlRGlyZWN0aW9uO1xyXG4gICAgaWYgKHRoaXMucHVsc2VBbW91bnQgPiAxKSB0aGlzLnB1bHNlRGlyZWN0aW9uID0gLTE7XHJcbiAgICBpZiAodGhpcy5wdWxzZUFtb3VudCA8IDApIHRoaXMucHVsc2VEaXJlY3Rpb24gPSAxO1xyXG4gIH1cclxuXHJcbiAgZHJhdyhjdHg6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCk6IHZvaWQge1xyXG4gICAgY29uc3QgcHVsc2VTY2FsZSA9IDEgKyB0aGlzLnB1bHNlQW1vdW50ICogMC4yO1xyXG4gICAgXHJcbiAgICBjdHguYmVnaW5QYXRoKCk7XHJcbiAgICBjdHguYXJjKFxyXG4gICAgICB0aGlzLnBvc2l0aW9uLngsXHJcbiAgICAgIHRoaXMucG9zaXRpb24ueSxcclxuICAgICAgdGhpcy5yYWRpdXMgKiBwdWxzZVNjYWxlLFxyXG4gICAgICAwLFxyXG4gICAgICBNYXRoLlBJICogMlxyXG4gICAgKTtcclxuICAgIFxyXG4gICAgLy8gR3JhZGllbnQgZmlsbFxyXG4gICAgY29uc3QgZ3JhZGllbnQgPSBjdHguY3JlYXRlUmFkaWFsR3JhZGllbnQoXHJcbiAgICAgIHRoaXMucG9zaXRpb24ueCxcclxuICAgICAgdGhpcy5wb3NpdGlvbi55LFxyXG4gICAgICAwLFxyXG4gICAgICB0aGlzLnBvc2l0aW9uLngsXHJcbiAgICAgIHRoaXMucG9zaXRpb24ueSxcclxuICAgICAgdGhpcy5yYWRpdXMgKiBwdWxzZVNjYWxlXHJcbiAgICApO1xyXG4gICAgZ3JhZGllbnQuYWRkQ29sb3JTdG9wKDAsICcjZmZmJyk7XHJcbiAgICBncmFkaWVudC5hZGRDb2xvclN0b3AoMSwgdGhpcy5jb2xvcik7XHJcbiAgICBcclxuICAgIGN0eC5maWxsU3R5bGUgPSBncmFkaWVudDtcclxuICAgIGN0eC5maWxsKCk7XHJcbiAgICBcclxuICAgIC8vIEdsb3cgZWZmZWN0XHJcbiAgICBjdHguc2hhZG93Q29sb3IgPSB0aGlzLmNvbG9yO1xyXG4gICAgY3R4LnNoYWRvd0JsdXIgPSAxMDtcclxuICAgIGN0eC5maWxsKCk7XHJcbiAgICBjdHguc2hhZG93Qmx1ciA9IDA7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJGb29kIiwidXBkYXRlIiwicHVsc2VBbW91bnQiLCJwdWxzZURpcmVjdGlvbiIsImRyYXciLCJjdHgiLCJwdWxzZVNjYWxlIiwiYmVnaW5QYXRoIiwiYXJjIiwicG9zaXRpb24iLCJ4IiwieSIsInJhZGl1cyIsIk1hdGgiLCJQSSIsImdyYWRpZW50IiwiY3JlYXRlUmFkaWFsR3JhZGllbnQiLCJhZGRDb2xvclN0b3AiLCJjb2xvciIsImZpbGxTdHlsZSIsImZpbGwiLCJzaGFkb3dDb2xvciIsInNoYWRvd0JsdXIiLCJjb25zdHJ1Y3RvciIsIm9wdGlvbnMiLCJ0eXBlIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/food.tsx\n"));

/***/ })

});